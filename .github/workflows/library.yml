name: Unit tests

on:
  workflow_call:
    inputs:
      php-version:
        required: true
        type: string
      laravel-version:
        required: true
        type: string
      coverage:
        required: true
        type: boolean
      sonar_project:
        required: true
        type: string
        default: monica
      sonar_organization:
        required: true
        type: string
        default: monicahq

env:
  semantic-node-version: 18

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Tests with PHP ${{ inputs.php-version }} + Illuminate ${{ inputs.laravel-version }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP ${{ inputs.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          coverage: ${{ inputs.coverage && 'pcov' || 'none' }}
          ini-values: ${{ inputs.coverage && 'pcov.directory=., pcov.exclude="~vendor~"' || '' }}

      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer files
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ inputs.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ inputs.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ inputs.php-version }}
            ${{ runner.os }}-composer-

      - name: Install dependencies with Laravel ${{ inputs.laravel-version }}
        run: |
          export COMPOSER_ROOT_VERSION=dev-main
          composer require "illuminate/support:${{ inputs.laravel-version }}" --no-update
          composer update --no-interaction --no-progress --prefer-dist

      - name: Run tests suite with coverage
        if: inputs.coverage
        run: vendor/bin/phpunit -c phpunit.xml --log-junit ./results/results.xml --coverage-clover ./results/coverage.xml
      - name: Run tests
        if: ! inputs.coverage
        run: vendor/bin/phpunit -c phpunit.xml --log-junit ./results/results.xml

      - name: Fix results files
        run: sed -i -e "s%$GITHUB_WORKSPACE/%%g" *.xml
        working-directory: results

      - name: Store results
        if: inputs.coverage
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results


  ####################
  # Sonarcloud
  ####################
  reporting:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          name: results
          path: results

      - name: Set version parameter
        id: version
        run: |
          version=$(git tag --points-at HEAD)
          test -z "$version" && version="main"
          echo "value=$version" >> $GITHUB_OUTPUT

      - name: SonarCloud Scan
        if: env.SONAR_TOKEN != ''
        uses: SonarSource/sonarcloud-github-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=${{ inputs.sonar_project }}
            -Dsonar.organization=monicahq
            -Dsonar.sources=src
            -Dsonar.exclusions=public/vendor/**
            -Dsonar.tests=tests
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.projectVersion=${{ steps.version.outputs.value }}
            -Dsonar.php.tests.reportPath=./results/results.xml
            -Dsonar.php.coverage.reportPaths=./results/coverage.xml


  ####################
  # Semantic release
  ####################
  semantic-release:
    needs: tests
    runs-on: ubuntu-latest
    name: Semantic release
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all tags

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.semantic-node-version }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN_RELEASE: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          semantic_version: ${{ env.semantic-node-version }}
          extra_plugins: |
            conventional-changelog-conventionalcommits@5.0.0
            @semantic-release/changelog@6
            semantic-release-github-pullrequest

      - name: New release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: echo ${{ steps.semantic.outputs.new_release_version }}

      - name: Store changelog file
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
