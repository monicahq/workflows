name: Build and test

on:
  workflow_call:
    inputs:
      php-version:
        required: true
        type: string
      connection:
        required: true
        type: string
      coverage:
        required: true
        type: boolean
      testsuite:
        type: string
      database_seed:
        type: boolean
      database_name:
        type: string
        default: monica
      database_secret:
        type: string
        default: secret
      vite:
        type: boolean
        default: true
      mock-assets:
        type: boolean
        default: true
      node-version:
        type: string

jobs:
  #############
  # Run tests
  #############
  tests:
    runs-on: ubuntu-latest
    name: Testsuite ${{ inputs.testsuite }} with PHP ${{ inputs.php-version }} + ${{ inputs.connection }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - uses: monicahq/workflows/.github/actions/php@npm
        with:
          php-version: ${{ inputs.php-version }}
          connection: ${{ inputs.connection }}
          coverage: ${{ inputs.coverage }}

      - uses: monicahq/workflows/.github/actions/composer@npm

      - uses: monicahq/workflows/.github/actions/js@npm
        with:
          node-version: ${{ inputs.node-version }}
          mock-assets: ${{ inputs.mock-assets }}

    # Prepare
      - name: Prepare environment
        run: |
          cp tests/.env.ci.${{ inputs.connection }} .env

      - name: Create sqlite database
        if: inputs.connection == 'sqlite'
        run: touch database/database.sqlite

      - name: Create mysql database
        if: inputs.connection == 'mysql'
        run: |
          sudo systemctl start mysql.service
          mysql --protocol=tcp -u root -proot -e "CREATE DATABASE IF NOT EXISTS ${{ inputs.database_name }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          
      - name: Create pgsql database
        if: inputs.connection == 'pgsql'
        run: |
          sudo systemctl start postgresql.service
          sudo -u postgres psql --command="CREATE USER ${{ inputs.database_name }} PASSWORD '${{ inputs.database_secret }}'" --command="\du"
          sudo -u postgres createdb --owner=${{ inputs.database_name }} ${{ inputs.database_name }}
          PGPASSWORD=${{ inputs.database_secret }} psql --username=${{ inputs.database_name }} --host=localhost --list ${{ inputs.database_name }}

      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --no-interaction -vvv

      - name: Run seeds
        run: php artisan db:seed --no-interaction -vvv
        if: inputs.database_seed

      - name: Cache route
        run: php artisan route:cache

      - name: Set results artifact name
        id: artifact
        run: echo "name=${{ inputs.connection }}_${{ inputs.php-version }}_${{ inputs.testsuite }}" | sed -e "s/*//g" >> $GITHUB_OUTPUT

    # Test
      - uses: monicahq/workflows/.github/actions/phptests@npm
        with:
          connection: ${{ inputs.connection }}
          coverage: ${{ inputs.coverage }}
          testsuite: ${{ inputs.testsuite }}
          artifact: ${{ steps.artifact.outputs.name }}
